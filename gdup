#!/bin/bash

GDUP_VERSION='0.0.3-alpha'

ROOT=$(dirname $(realpath ${BASH_SOURCE:-$0}))

ALL_VERSIONS=$(curl -Ls https://downloads.tuxfamily.org/godotengine/ \
	| grep -E '^.*<a.*?>([0-9](\.[0-9])+)</a>.*$' \
	| sed -E 's/^.*<a.*?>([0-9](\.[0-9])+)<\/a>.*$/\1/g')

function has-version() {
	for v in $ALL_VERSIONS; do
		if [[ "$v" == "$1" ]]; then
			return 0
		fi
	done
	return 1
}

if [[ -z $1 ]]; then
	echo "Expected and argument"
	exit 1
fi

# Effectively deciding whether to install mono or non-mono
INSTALL_PATH=""

if ! [[ -z $2 ]]; then
    if [[ $1 == "--mono" ]]; then
        INSTALL_PATH="mono"
        VERSION=$2
    else
        echo "Expected only one argument"
        exit 1
    fi
else
    VERSION="$1"
fi

if [[ "$1" == "--version" || "$1" == "-v" ]]; then
	echo "GodotUP $GDUP_VERSION"
	exit
fi

if ! has-version "$VERSION"; then
	echo "Version '$VERSION' does not exist."
	exit 2
fi

if ! [[ -d ~/.gdup ]]; then
    mkdir ~/.gdup
fi

pushd >/dev/null `mktemp -d`

ARCH='unknown'

# Boy is the naming convention a mess...
case "$(uname -om)" in
	"x86_64 GNU/Linux")
		if [[ "$VERSION" =~ ^4(\.[0-9])+$ ]]; then
			ARCH='linux.x86_64'
		else
            if [[ "$INSTALL_PATH" == "mono" ]]; then
                ARCH='x11_64'
            else
                ARCH='x11.64'
            fi
		fi
		;;
	"i686 GNU/Linux")
		if [[ "$VERSION" =~ ^4(\.[0-9])+$ ]]; then
			ARCH='linux.x86_32'
		else
            if [[ "$INSTALL_PATH" == "mono" ]]; then
                ARCH='x11_32'
            else
                ARCH='x11.32'
            fi
		fi
		;;
	*)
		echo "Error: Unsupported operating system."
		exit 3
		;;
esac

ZIP=$(curl -Ls "https://downloads.tuxfamily.org/godotengine/${VERSION}/${INSTALL_PATH}/" \
	| grep 'application/zip' \
	| grep -F "$ARCH" \
	| sed -E 's/^.*?<a.*?>(.+?)<\/a>.*$/\1/')
URL="https://downloads.tuxfamily.org/godotengine/${VERSION}/${INSTALL_PATH}/${ZIP}"

wget "$URL"
unzip "$ZIP"
rm "$ZIP"

if [[ "$INSTALL_PATH" == "mono" ]]; then
    DIRNAME="${ZIP%%.zip}"

    mv $DIRNAME ~/.gdup/godot-mono-${VERSION}
    ln -sfv ~/.gdup/godot-mono-${VERSION}/Godot_v${VERSION}-* \
        ~/.local/bin/godot-mono-${VERSION}

    # Create a desktop file
    cat $ROOT/godot-mono-template.desktop | GODOT_VERSION=$VERSION envsubst \
        > ~/.local/share/applications/godot-mono-$VERSION.desktop
else
    EXE="${ZIP%%.zip}"

    install "$EXE" -m 775 ~/.gdup/godot-$VERSION
    ln -sfv ~/.gdup/godot-$VERSION ~/.local/bin/godot-$VERSION

    # Create a desktop file
    cat $ROOT/godot-template.desktop | GODOT_VERSION=$VERSION envsubst \
        > ~/.local/share/applications/godot-$VERSION.desktop
fi

popd >/dev/null
